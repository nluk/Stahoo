apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "pl.grupowy.stahoo"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "production"
    productFlavors {
        production {
            buildConfigField "String", "PROTOCOL", "\"http\""
            buildConfigField "String", "HOST", "\"mateuszk.pythonanywhere.com\""
            buildConfigField "String", "PATH", "\"api_stahoo\""
        }
    }
    apply plugin: 'androidx.navigation.safeargs'
}

ext {
    supportVersion = '28.0.0'
    archVersion = '1.1.1'
    gsonVersion = '2.8.5'
    daggerVersion = '2.17'
    retrofitVersion = '2.3.0'
    rxJavaVersion = '2.0.6'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'


    /* Picasso lib for image loading  */
    implementation 'com.squareup.picasso:picasso:2.71828'

    /* Android Architecture Component - ConstraintLayout  */
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    /* Android Architecture Component - LiveData & ViewModel  */
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    /* Android Architecture Component - Room Persistance Lib  */
    implementation 'androidx.room:room-runtime:2.0.0'
    implementation 'androidx.room:room-rxjava2:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt 'androidx.room:room-compiler:2.0.0'

    /* Dagger2 - We are going to use dagger.android which includes
     * support for Activity and fragment injection so we need to include
     * the following dependencies */
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    /* Dagger2 - default dependency */
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    /* GSON dependency */
    implementation "com.google.code.gson:gson:$gsonVersion"

    /* Retrofit */
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    /* RxJava - default dependency */
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    def nav_version = "2.1.0-alpha02"

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version" // For Kotlin use navigation-fragment-ktx
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version" // For Kotlin use navigation-ui-ktx


}
